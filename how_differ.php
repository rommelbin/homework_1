<?php
// Задание 3
//class A {
//    public function foo() {
//        static $x = 0;
//        echo ++$x;
//    }
//}
//$a1 = new A();
//$a2 = new A();
//$a1->foo();
//$a2->foo();
//$a1->foo();
//$a2->foo();
//// Так как эта статичная переменная привязана к классу, независимо от того, какой объект этого класса, она будет обновляться.
//A::foo(); // Здесь вызывается от класса, и происходит тоже самое

// Задание 4
//class A {
//    public function foo() {
//        static $x = 0;
//        echo ++$x;
//    }
//}
//class B extends A {
//}
//$a1 = new A(); // Здесь создаётся два класса и один из них наследуется у другого, поэтому, у каждого свой статик, и к каждой статической переменной каждого класса  + 1
//$b1 = new B();
//$a1->foo();
//$b1->foo();
//$a1->foo();
//$b1->foo();

//Задание 5
//class A {
//    public function foo() {
//        static $x = 0;
//        echo ++$x;
//    }
//}
//class B extends A {
//}
//$a1 = new A;
//$b1 = new B;
//$a1->foo();
//$b1->foo();
//$a1->foo();
//$b1->foo(); // Здесь тоже самое, что и во втором варианте, только не вызывается конструктор.
